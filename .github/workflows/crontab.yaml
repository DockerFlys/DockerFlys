name: Rsync Latest Image

on:
  workflow_dispatch:
  schedule:
    - cron: '5 5 * * *' 
 
jobs:
  push_to_registries:
    name: sync Latest Image to Registrys
    runs-on: self-hosted
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        if: ( !cancelled() )
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Log in to GitHub registry
      #   uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
      #   if: ( !cancelled() )
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Log in to Tencent registry GZ
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        if: ( !cancelled() )
        with:
          registry: ccr.ccs.tencentyun.com
          username: ${{ secrets.DOCKER_USERNAME_TENCENT }}
          password: ${{ secrets.DOCKER_PASSWORD_TENCENT }}

      - name: Log in to Tencent registry USW
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: uswccr.ccs.tencentyun.com
          username: ${{ secrets.DOCKER_USERNAME_TENCENT }}
          password: ${{ secrets.DOCKER_PASSWORD_TENCENT }}

      - name: Log in to Aliyun registry HZ
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        if: ( !cancelled() )
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.DOCKER_USERNAME_ALIYUN }}
          password: ${{ secrets.DOCKER_PASSWORD_ALIYUN }}

      - name: Log in to Aliyun registry USW
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: registry.us-west-1.aliyuncs.com
          username: ${{ secrets.DOCKER_USERNAME_ALIYUN }}
          password: ${{ secrets.DOCKER_PASSWORD_ALIYUN }}

      - name: Mirror Latest images
        if: ( !cancelled() )
        run: |
            # 只针对 要求 latest 版本的镜像
            cat ${GITHUB_WORKSPACE}/registrys.txt|grep latest &> /tmp/registrys.txt
            while IFS= read -r line; do
                name=$(echo "$line" | awk -F'/' '{print $NF}' | sed 's/\[.*//')
                source=$(echo "$line" | awk '{print $1}' | sed 's/\[.*//') 
                if [[ $line =~ \[([^]]+)\] ]]; then 
                    echo "${source}:latest"
                    # 只要一个目标镜像不存在，拉下来以后都推送一轮 
                    docker pull ${source}:latest || true
                    if [ $? -eq 0 ]; then
                        for registry in uswccr.ccs.tencentyun.com ccr.ccs.tencentyun.com registry.us-west-1.aliyuncs.com registry.cn-hangzhou.aliyuncs.com;do
                            docker tag ${source}:latest ${registry}/${{ secrets.DOCKER_USERNAME }}/${name}:latest&> /dev/null
                            screen -dmS push-${registry}-${name} docker push ${registry}/${{ secrets.DOCKER_USERNAME }}/${name}:latest
                        done
                    fi
                fi
            done < "/tmp/registrys.txt"
            echo "当前推送任务："
            while [ $(screen -ls|grep push | wc -l|awk '{print int($0)}') -ne 0 ] 
            do
                echo "推送中，waitting..."
                sleep 60
                screen -wipe ||true &> /dev/null
            done
            echo "推送完毕"
            # docker system prune -af
            exit 0
        shell: bash
      - name: Dayly Artifact Cleanup
        uses: jimschubert/delete-artifacts-action@v1
        with:
          log_level: 'error'
          min_bytes: '0'
      - name: Clean Up
        uses: AutoModality/action-clean@v1